/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GuestRegistration as PrismaGuestRegistration,
} from "@prisma/client";

export class GuestRegistrationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GuestRegistrationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.guestRegistration.count(args);
  }

  async guestRegistrations(
    args: Prisma.GuestRegistrationFindManyArgs
  ): Promise<PrismaGuestRegistration[]> {
    return this.prisma.guestRegistration.findMany(args);
  }
  async guestRegistration(
    args: Prisma.GuestRegistrationFindUniqueArgs
  ): Promise<PrismaGuestRegistration | null> {
    return this.prisma.guestRegistration.findUnique(args);
  }
  async createGuestRegistration(
    args: Prisma.GuestRegistrationCreateArgs
  ): Promise<PrismaGuestRegistration> {
    return this.prisma.guestRegistration.create(args);
  }
  async updateGuestRegistration(
    args: Prisma.GuestRegistrationUpdateArgs
  ): Promise<PrismaGuestRegistration> {
    return this.prisma.guestRegistration.update(args);
  }
  async deleteGuestRegistration(
    args: Prisma.GuestRegistrationDeleteArgs
  ): Promise<PrismaGuestRegistration> {
    return this.prisma.guestRegistration.delete(args);
  }
}
